errors:
  backup:
    no_backup_files: "No files or directories provided for backup."
  build:
    make: "Make process failed."
    make_install: "Make install failed."
    scons_build: "SCons build failed."
    scons_config: "SCons configuration failed."
    scons_install: "SCons install failed."
  common:
    action_not_specified: "No action specified."
    already_installed_by_others: "{arg0} is already installed for other users."
    already_installed_by_user: "{arg0} is already installed for {arg1}."
    download_file: "Failed to download file."
    insufficient_args: "Insufficient arguments."
    invalid_action: "Invalid action: {arg0}."
    invalid_command: "Invalid command: {arg0}."
    invalid_infobox_type: "Invalid infobox type: {arg0}."
    invalid_key: "Invalid key: {arg0}."
    invalid_option: "Invalid option: {arg0}."
    missing_arg: "Missing argument."
    missing_required_tools: "Required tools not installed."
  dependency:
    apt_add_source: "Failed to add source: {arg0}."
    apt_apt_architecture_mismatch: "Architecture mismatch: {arg0} != {arg1}."
    apt_autoclean: "Failed to autoclean {arg0}."
    apt_autoremove: "Failed to autoremove {arg0}."
    apt_backup_sources: "Failed to backup sources."
    apt_check: "'apt-get check' failed, you may have broken packages."
    apt_gpg_key_add: "Failed to add GPG key for {arg0} source."
    apt_purge: "Failed to purge {arg0}."
    apt_recv_keys: "Failed to receive keys for {arg0}."
    apt_trusted_key_add: "Failed to add trusted key for {arg0}."
    apt_update: "Failed to update system."
    dependencies_install: "Failed to install {arg0}."
    dependencies_missing: "No dependencies found for {arg0}."
    dependency_missing: "Dependency not found: {arg0}."
    dpkg_locked: "The dpkg database is locked."
    external_dependencies_install: "Failed to install external dependencies."
    external_dependencies_missing: "External dependencies not found."
    source_name_missing: "Please provide a valid source name."
    source_url_missing: "Source URL not found."
    unpack_deb_file: "Failed to unpack DEB file."
  environment:
    composer_install: "Failed to install Composer."
    configure_sendmail: "Failed to configure sendmail."
    db_missing: "Database {arg0} not found."
    db_missing_args: "Missing arguments."
    db_missing_query: "No query provided."
    env_variable_missing: "Environment variable not found: {arg0}."
    export_variable: "Failed to export variable: {arg0}."
  filesystem:
    bashrc_missing: "Bashrc file not found."
    chmod: "Failed to change permissions of {arg0}."
    chown: "Failed to change ownership of {arg0}."
    create_mount_point: "Failed to create mount point."
    create_partitions: "Partitions not created. No changes have been made."
    create_subvolume: "Error creating subvolume."
    create_symlink: "Failed to create symlink."
    change_directory: "Failed to change directory {arg0}."
    disk_already_mounted: "Disk {arg0} is already mounted to {arg1}... Skipping..."
    disk_creation: "mdadm has encountered an error while creating the disk... Exiting..."
    disk_created_but_not_mounted: "Disk {arg0} created but not mounted."
    disk_formatting: "An error was detected while formatting the disk {arg0}."
    disk_mount: "Failed to mount disk {arg0} to {arg1}."
    disk_partition: "An error was detected while partitioning the RAID disk {arg0}."
    disk_unmount: "Failed to unmount disk {arg0}."
    filesystem_type_invalid: "Invalid filesystem type: {arg0}."
    insufficient_disks_for_raid: "Not enough disks provided for RAID{arg0}. Disks provided: {arg1} - Disks required: {arg2}."
    move: "Failed to move {arg0} to {arg1}."
    sed: "Failed to replace {arg0} with {arg1} in {arg2}."
    raid_aborted: "RAID creation aborted."
    raid_level_invalid: "Invalid RAID level: {arg0}."
    raid_not_possible: "No RAID configuration is possible with {arg1} disks."
  git:
    branch_mismatch: "Cannot switch to main when beta branch is set."
    branch_switch: "Failed to switch to beta branch. Branch and environment file mismatch."
    cancel_branch_switch: "Switch to beta branch cancelled."
    clone_repo: "Failed to clone repository."
    invalid_pull_action: "Invalid pull action: {arg0}."
  network:
    api_unreachable: "HarmonyUI API unreachable."
    dashboard_unreachable: "HarmonyUI dashboard unreachable."
    get_ipv4: "Failed to get IPv4 address."
    invalid_api_response: "Invalid API response: {arg0}."
    invalid_configuration: "Invalid network configuration: {arg0}."
    port_in_use: "Port {arg0} is unavailable."
    port_range_missing: "No port range found for {arg0}."
  security:
    key_already_exists: "Key {arg0} already exists... Exiting."
    key_missing: "Key not found."
    key_not_decodable: "Unable to decode key."
    key_not_revealable: "Unable to reveal key."
    no_string_to_encode: "No string provided for encoding."
    configure_ssh: "Failed to secure SSH."
  service:
    already_running: "Service {arg0} is already running."
    disable: "Failed to disable {arg0} service."
    enable: "Failed to enable {arg0} service."
    not_found: "Service {arg0} not found."
    not_running: "Service {arg0} is not running."
    start: "Failed to start {arg0} service."
    stop: "Failed to stop {arg0} service."
  software:
    autogen_key_invalid: "Invalid autogen key: {arg0}."
    config_file_missing: "Configuration file not found."
    config_syntax_invalid: "Invalid configuration expression: {arg0}."
    software_name_missing: "Software name not found."
  user:
    invalid_group_name: "Invalid group: {arg0}."
    not_found: "User not found: {arg0}."
    not_in_mediaease: "This user is not a MediaEase user."
    set_password: "Failed to set password for {arg0}."
    user_id_missing: "User ID not found: {arg0}."
  virtualization:
    add_uv_profile: "Failed to add UV profile to {arg0}."
    dependencies_not_found: "No Python dependencies found for {arg0}."
    dependency_install: "Failed to install Python dependency: {arg0}."
    uv_install: "Failed to install universal version (UV)."
    venv_create: "Failed to create virtual environment."
    venv_create_no_path: "No path provided for virtual environment creation."
    install_venv_requirements: "Error occurred while installing requirements."
    remove_venv: "Error occurred while removing virtual environment."
    remove_venv_requirements: "Failed to remove packages from virtual environment requirements."

messages:
  common:
    execution_time_total: "Total execution time: {arg0}h {arg1}min {arg2}sec."
    fallback_to_process: "Fallback to {arg0} process."
    language_loaded: "Language {arg0} loaded."
  dependency:
    add_source_count: "{arg0}/{arg1} sources added."
    install_count: "Number of dependencies installed: {arg0}."
    unpack_deb_file: "Unpacking DEB file..."
  environment:
    configure_bashrc: "Configuring bashrc..."
    configure_mediaease_environment: "Configuring MediaEase environment..."
    credentials: "You can use the following credentials to log in."
  filesystem:
    disks_to_format: "The following disks will be formatted and reset: {arg0} to {arg1}. Filesystem {arg2} will be used."
    future_disk: "The disk {arg0} will be created as a result of the operation."
    number_of_disks: "This will use {arg0} disks."
    system_on_disk: "System is on disk {arg0}."
  git:
    download_release: "Getting release..."
    found_release: "Release found."
  network:
    generate: "Generating proxy..."
  security:
    create_vault: "Creating vault..."
    last_time: "This is the last time you will see the user salt. Please save it somewhere secure."
    store_password: "Storing password in the vault..."
    user_salt: "User salt."
  service:
    disable: "Disabling {arg0} service..."
    enable: "Enabling {arg0} service..."
    entry_exists: "Service entry {arg0} already exists."
    generate: "Generating service..."
    start: "Starting {arg0} service..."
    stop: "Stopping {arg0} service..."
    validate: "Validating {arg0} service..."
  software:
    bypass_active: "Bypass mode is active - Installation will not be persisted in database."
    configure: "Configuring {arg0}..."
    find_generated_files: "You can find the generated files in {arg0}."
    generated_files: "Generated files: {arg0}, {arg1}."
    learn_more: "Learn more about how to create a software entry in the documentation."
    update_configuration: "Please update the configuration file and the logo used with the correct values."
    update_translation_files: "Translation files updated: "
    warn_about_translation_files: "Don't forget to add a correct description for the software in the translations files."
  user:
    add_to_group: "Adding user {arg0} to group {arg1}..."
    ban: "Banning user {arg0}..."
    create_base_groups: "Creating base groups..."
    found: "User found: {arg0}."
    is_admin: "The user is an administrator."
    is_not_admin: "The user is not an administrator."
    password: "Password."
    set_password: "Setting password for {arg0}..."
    username: "Username."
  virtualization:
    activate_venv: "Virtual environment activated."
    install_venv_requirements: "Installing required dependencies for {arg0}..."

success:
  backup:
    create: "Backup created {arg0}."
  build:
    make_install: "Make install done."
    scons_install: "SCons install done."
  common:
    download_file: "File downloaded."
    installation_complete: "{arg0} Installation complete."
  dependency:
    apt_source_remove: "APT source for {arg0} removed."
    apt_update: "System updated."
    dependencies_install: "Dependencies installed."
    dependency_install: "{arg0} installed."
    external_dependencies_install: "{arg0} installed."
    metapackage_build: "Metapackage built."
    metapackage_generate: "Metapackage generated."
    metapackage_install: "Metapackage installed."
    configure_sendmail: "Sendmail configured."
    remove_unnecessary_packages: "Unnecessary packages removed."
    unpack_deb_file: "DEB file unpacked."
  environment:
    configure_bashrc: "Bashrc configured."
    install_composer_dependencies: "HarmonyUI ready."
  filesystem:
    disk_mount: "Disk {arg0} mounted to {arg1}."
    disk_partition: "Disk {arg0} was partitioned into {arg1} filesystem."
    disk_ready: "Disk {arg0} is ready to be mounted."
    partitions_create: "Partitions created."
    select_raid_level: "Selected RAID level: {arg0}."
  git:
    clone_repo: "Repository cloned."
    download_release: "Release downloaded."
  network:
    api_reachable: "API reachable."
    dashboard_reachable: "Dashboard reachable."
    generate: "Proxy generated."
  security:
    create_vault: "Vault created."
    init_vault: "Vault initialized."
    configure_ssh: "SSH secured."
    store_password: "Password stored successfully in the vault."
    store_salt: "User salt stored."
  service:
    disable: "Service {arg0} disabled."
    enable: "Service {arg0} enabled."
    generate_systemd: "Service file created."
    reload: "Service {arg0} reloaded."
    restart: "Service {arg0} restarted."
    run: "Service {arg0} is running."
    start: "Service {arg0} started."
    stop: "Service {arg0} stopped."
    validate: "Service {arg0} validated."
  software:
    configure: "{arg0} configured."
    create: "{arg0} created."
  user:
    add_to_group: "User added to group {arg0}."
    ban: "User {arg0} banned for {arg1}."
    create_base_groups: "Base groups created."
    create: "User {arg0} created."
    set_password: "Password set."
  virtualization:
    install_venv: "Virtual environment successfully installed."
    install_venv_requirements: "Successfully installed requirements for {arg0}."
    remove_venv: "Virtual environment successfully removed for {arg0}."
    version_check: "Python version checked."

headers:
  backup:
    create: "Creating backup..."
  dependency:
    apt_add_sources: "Adding sources..."
    external_dependencies_install: "Installing {arg0} from custom source..."
    dependencies_install: "Installing dependencies..."
    dependency_install: "Installing {arg0}..."
    dpkg_locked_info: "Resolving the issue..."
    metapackage_build: "Building metapackage..."
    metapackage_generate: "Generating metapackage..."
    metapackage_install: "Installing metapackage..."
    remove_unnecessary_packages: "Removing unnecessary packages..."
    configure_sendmail: "Configuring sendmail... This may take a while."
    apt_update: "Updating system..."
  environment:
    install_composer_dependencies: "Installing Composer dependencies for HarmonyUI..."
  filesystem:
    create_disk: "Creating RAID{arg0} ({arg1}) disk..."
    format_disk: "Partitioning {arg0} to {arg1} filesystem..."
    init_raid_creation: "Initializing RAID creation..."
    mount: "Mounting {arg0} to {arg1}..."
    partition_empty_disks: "Creating partitions on empty disks..."
  git:
    clone_repo: "Cloning repository..."
  security:
    configure_ssh: "Securing SSH..."
  software:
    add: "Just relax, let us handle the installation and setup of {arg0}."
    backup: "No worries, we're creating a backup of {arg0} for you."
    create_entry: "Creating a new software entry..."
    reinstall: "Hang tight, we're going to reinstall {arg0} for you."
    remove: "Rest easy, we're safely removing {arg0} for you."
    reset: "Stay calm, we're proceeding to reset {arg0} to its default settings."
    update: "Sit back, we're updating {arg0} to the latest version for you."
  user:
    create: "Creating user..."
  virtualization:
    version_check: "Checking Python version..."

footers:
  software:
    add: "Installation finished. {arg0} is now installed on your system."
    backup: "Backup complete. {arg0} has been backed up."
    remove: "{arg0} has been removed from your system."
    reset: "Reset complete. {arg0} has been reset to its default settings."
    update: "Update complete. {arg0} is now up to date."
  common:
    thank_you: "Thank you for using MediaEase. I hope you will enjoy using it."

links:
  software:
    access_url: "Access {arg0} at {arg1}."
    documentation: "Documentation: {arg0}."
    homepage: "Homepage: {arg0}."
    mediaease_docs: "MediaEase Docs: {arg0}"

prompts:
  common:
    are_you_sure: "Are you sure? (Y/n): "
    choice_prompt: "Your choice."
    continue_label: "Continue."
    invalid_input: "Invalid input. Please try again."
    or_label: "or"
    reboot_countdown: "Rebooting in {arg0} seconds..."
    reboot_prompt: "System reboot required. Reboot now?"
    default: "Default"
  filesystem:
    select_raid_level: "Choose from possible RAID levels: {arg0}."
  software:
    category_group: "Enter the Category Group for the software: "
    compatible_with_autogen: "Is this app compatible with MediaEase Autogen feature? (yes/no)."
    default_port: "Enter the default port for the software: "
    docs_url: "Enter the software documentation URL: "
    homepage_url: "Enter the software homepage URL: "
    is_multi_user: "Is the software multi-user? (yes/no)."
    name: "Enter the software name: "
    port_range: "Enter the default port range for the software: (Ex: 5780-6001)."
    repo_url: "Enter the software repository URL: "
    select_autogen_keys: "Select the autogen keys for the software: "
    service_directives: "Enter the service directives for the software (comma separated list): (Ex: Type=simple, Environment=TMPDIR=/home/%i/tmp/$software_name)."
    ssl_port: "Enter the SSL port for the software: "
    ssl_port_range: "Enter the SSL port range for the software: (Ex: 11245-11287)."
    use_random_port: "Let MediaEase choose a port for you using port range? (yes/no)."
    uses_port: "Is this app will use a port? (yes/no)."
    uses_service: "Is this app will use a service? (yes/no)."
  user:
    domain: "Enter a new domain: "
    domain_invalid: "Domain contains special characters. Do you want to use this sanitized domain: {arg0}."
    domain_valid: "Domain validated."
    email: "Enter a new email: "
    email_invalid: "Email contains special characters. Do you want to use this sanitized email: {arg0}."
    email_valid: "Email validated."
    hostname: "Enter a new hostname: "
    hostname_invalid: "Hostname contains special characters. Do you want to use this sanitized hostname: {arg0}."
    hostname_valid: "Hostname validated."
    password: "Enter a new password: "
    password_invalid: "Password contains special characters. Do you want to use this sanitized password: {arg0}."
    password_valid: "Password validated."
    username: "Enter a new username: "
    username_invalid: "Username contains special characters. Do you want to use this sanitized username: {arg0}."
    username_valid: "Username validated."
